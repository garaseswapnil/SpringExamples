<?xml version="1.0" encoding="UTF-8"?>  
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

<!--
	It uses setter to create an object.
	It first call default constructor.
	It first assigns default values to fields.
	Then assigns original values to fields.
	If we not mentioned any field then it assigns default value to field.	
	private constructor is accessible
 -->
<bean class="com.spring.SpringExamples.Employee" id="emp">
<property name="empId" value="01"></property>
<property name="empName" value="Swapnil"></property>
<property name="address" ref="addr"></property>
</bean>

<bean class="com.spring.SpringExamples.Address" id="addr">
<property name="city" value="Pune"></property>
<property name="zip" value="411036"></property>
</bean>


<!--
	It uses parameterized Constructor to create an object.
	It directly assigns original values to fields.
	If we not mentioned any field then it gives error.
	private constructor is accessible.	
 -->
<!-- <bean class="com.spring.SpringExamples.Employee" id="emp">
<constructor-arg name="empId" value="101" ></constructor-arg>
<constructor-arg name="empName" value="Swapnil" ></constructor-arg>
<constructor-arg name="address" ref="addr" ></constructor-arg>
</bean>
<bean class="com.spring.SpringExamples.Address" id="addr">
<constructor-arg name="city" value="Mumbai" ></constructor-arg>
<constructor-arg name="zip" value="400008" ></constructor-arg>
</bean>
 -->
</beans>